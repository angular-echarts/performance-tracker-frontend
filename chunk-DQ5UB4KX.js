import{j as D,k as T,l as O,r as S}from"./chunk-CQPRKNI2.js";import{a as P,b as I}from"./chunk-6ODPO4LF.js";import{Ba as u,Ha as c,Ia as o,Ja as i,Ka as v,L as x,La as g,Ma as l,Na as m,Oa as C,Pa as E,Q as _,m as d,p as y,pa as a,ta as b,w as h,ya as M}from"./chunk-5YGTAPRO.js";import"./chunk-QEZ3K4DX.js";var f=class n{constructor(e){this.http=e}memoryUrl="https://performance-tracker-service.onrender.com/api/memorymetrics/";cpuUrl="https://performance-tracker-service.onrender.com/api/cpumetrics/";getUsedMemory(){return this.http.get(`${this.memoryUrl}usedmemory`).pipe(y(e=>e.map((t,r)=>({index:r,value:t}))),h(e=>(console.error("Error fetching used memory data:",e),d(()=>e))))}getFreeMemory(){return this.http.get(`${this.memoryUrl}freememory`).pipe(y(e=>e.map((t,r)=>({index:r,value:t}))),h(e=>(console.error("Error fetching used memory data:",e),d(()=>e))))}getCpuUsage(){return this.http.get(`${this.cpuUrl}cpuusage`).pipe(y(e=>e.map((t,r)=>({index:r,value:t}))),h(e=>(console.error("Error fetching CPU usage data:",e),d(()=>e))))}static \u0275fac=function(t){return new(t||n)(_(S))};static \u0275prov=x({token:n,factory:n.\u0275fac,providedIn:"root"})};function k(n,e){if(n&1&&(o(0,"option",7),m(1),i()),n&2){let t=e.$implicit;c("value",t.value),a(),E(" ",t.label," ")}}function A(n,e){n&1&&(o(0,"div"),m(1,"Loading Memory Chart..."),i())}function F(n,e){if(n&1&&(o(0,"div"),m(1),i()),n&2){let t=l();a(),C(t.memoryError)}}function z(n,e){if(n&1&&(o(0,"div"),v(1,"div",8),i()),n&2){let t=l();a(),c("options",t.memoryChartOption)}}function N(n,e){n&1&&(o(0,"div"),m(1,"Loading CPU Chart..."),i())}function j(n,e){if(n&1&&(o(0,"div"),m(1),i()),n&2){let t=l();a(),C(t.cpuError)}}function H(n,e){if(n&1&&(o(0,"div"),v(1,"div",8),i()),n&2){let t=l();a(),c("options",t.cpuChartOption)}}var U=class n{constructor(e){this.performanceService=e}memoryChartOption;cpuChartOption;memoryLoading=!0;cpuLoading=!0;memoryError=null;cpuError=null;memoryType="used";availableMemoryTypes=[{value:"used",label:"Used Memory"},{value:"free",label:"Free Memory"}];ngOnInit(){this.loadMemoryChartData(),this.loadCpuChartData()}ngAfterViewInit(){}onMemoryTypeChange(e){this.memoryType=e,this.loadMemoryChartData()}handleMemoryTypeChange(e){let r=e.target.value;r==="used"||r==="free"?this.onMemoryTypeChange(r):console.warn("Invalid memory type selected:",r)}loadMemoryChartData(){this.memoryLoading=!0,this.memoryError=null,(this.memoryType==="used"?this.performanceService.getUsedMemory():this.performanceService.getFreeMemory()).subscribe({next:t=>{let r=t.map(s=>s.index+1),p=t.map(s=>s.value);this.memoryChartOption={title:{text:this.memoryType==="used"?"Memory Usage Over Past 1 Minute":"Free Memory Over Past 1 Minute"},tooltip:{trigger:"axis"},xAxis:{type:"category",data:r,name:"Time (seconds)"},yAxis:{type:"value",name:"Memory (MB)"},series:[{data:p,type:"line",smooth:!0}]},this.memoryLoading=!1},error:t=>{this.memoryError="Error loading memory chart data",console.error(t),this.memoryLoading=!1}})}loadCpuChartData(){this.cpuLoading=!0,this.cpuError=null,this.performanceService.getCpuUsage().subscribe({next:e=>{let t=e.map(p=>p.index+1),r=e.map(p=>p.value);this.cpuChartOption={title:{text:"CPU Usage Over Past 1 Minute"},tooltip:{trigger:"axis"},xAxis:{type:"category",data:t,name:"Time (seconds)"},yAxis:{type:"value",name:"CPU Usage (%)"},series:[{data:r,type:"line",smooth:!0}]},this.cpuLoading=!1},error:e=>{this.cpuError="Error loading CPU chart data",console.error(e),this.cpuLoading=!1}})}static \u0275fac=function(t){return new(t||n)(b(f))};static \u0275cmp=M({type:n,selectors:[["app-dynamic-chart"]],decls:24,vars:8,consts:[[1,"chart-controls"],["for","memoryTypeSelect"],["id","memoryTypeSelect",3,"change","value"],[3,"value",4,"ngFor","ngForOf"],[3,"click"],[1,"chart-description"],[4,"ngIf"],[3,"value"],["echarts","",1,"chart-container",3,"options"]],template:function(t,r){t&1&&(o(0,"h2"),m(1,"Memory Usage"),i(),o(2,"div",0)(3,"label",1),m(4,"Select Memory Type: "),i(),o(5,"select",2),g("change",function(s){return r.handleMemoryTypeChange(s)}),u(6,k,2,2,"option",3),i(),o(7,"button",4),g("click",function(){return r.loadMemoryChartData()}),m(8,"\u{1F5D8}"),i()(),o(9,"p",5),m(10,` This chart displays memory usage trends based on the selected memory type. Use it to monitor how system memory is being consumed over time and identify any potential memory bottlenecks.
`),i(),u(11,A,2,0,"div",6)(12,F,2,1,"div",6)(13,z,2,1,"div",6),o(14,"h2"),m(15,"CPU Usage"),i(),o(16,"p",5),m(17,` This chart shows CPU utilization across different cores or processes. It helps visualize processing load and assists in diagnosing performance issues or system overload.
`),i(),o(18,"div",0)(19,"button",4),g("click",function(){return r.loadCpuChartData()}),m(20,"\u{1F5D8}"),i()(),u(21,N,2,0,"div",6)(22,j,2,1,"div",6)(23,H,2,1,"div",6)),t&2&&(a(5),c("value",r.memoryType),a(),c("ngForOf",r.availableMemoryTypes),a(5),c("ngIf",r.memoryLoading),a(),c("ngIf",r.memoryError),a(),c("ngIf",!r.memoryLoading&&!r.memoryError),a(8),c("ngIf",r.cpuLoading),a(),c("ngIf",r.cpuError),a(),c("ngIf",!r.cpuLoading&&!r.cpuError))},dependencies:[O,D,T,I,P],styles:['.chart-container[_ngcontent-%COMP%]{width:100%;height:400px;margin-top:20px;margin-bottom:30px;border:2px solid #ddd;border-radius:8px;transition:box-shadow .3s ease}.chart-controls[_ngcontent-%COMP%]{margin:20px 0 16px;display:flex;align-items:center;gap:10px}.chart-description[_ngcontent-%COMP%]{font-size:15px;color:#555;margin:10px 0;line-height:1.5}h2[_ngcontent-%COMP%]{margin-top:30px;margin-bottom:8px;color:#222;font-weight:700;font-size:22px}.chart-container[_ngcontent-%COMP%]:hover{box-shadow:0 0 12px #007bff4d}button[_ngcontent-%COMP%]{padding:5px 10px;cursor:pointer;border-radius:4px;border:1px solid #ccc;background-color:#f0f0f0;height:32px}button[_ngcontent-%COMP%]:hover{background-color:#e0e0e0}label[for=memoryTypeSelect][_ngcontent-%COMP%]{font-weight:600;font-size:16px;margin-right:10px;color:#333}#memoryTypeSelect[_ngcontent-%COMP%]{padding:6px 12px;font-size:14px;border-radius:4px;border:1px solid #ccc;transition:border-color .3s,box-shadow .3s;cursor:pointer}#memoryTypeSelect[_ngcontent-%COMP%]:hover, #memoryTypeSelect[_ngcontent-%COMP%]:focus{border-color:#007bff;box-shadow:0 0 5px #007bff80;outline:none}div[ng-reflect-ng-if="Loading..."][_ngcontent-%COMP%], div[ng-reflect-ng-if="[_ngcontent-%COMP%]{{ error }}"][_ngcontent-%COMP%]{font-size:16px;font-weight:700;color:#666;padding:16px;text-align:center}@media (max-width: 600px){.chart-container[_ngcontent-%COMP%]{height:300px}label[for=memoryTypeSelect][_ngcontent-%COMP%], #memoryTypeSelect[_ngcontent-%COMP%]{display:block;margin-bottom:10px}}']})};export{U as DynamicChartComponent};
